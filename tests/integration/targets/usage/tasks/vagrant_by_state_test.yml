# Calling a non existing state
- name: Calling a non existing state
  jclaveau.vagrant.vagrant:
  args:
    state: lalala
    box_name: "{{box_name}}"
    vm_name: "frida_by_state"
    config_code: |
      config.vm.provider "virtualbox" do |vb|
      vb.memory = 256
      end
    log: true
  register: vagrant_state_invalid_frida_results
  ignore_errors: true

- name: dbg vagrant_state_invalid_frida_results
  ansible.builtin.debug:
    msg: "{{ vagrant_state_invalid_frida_results }}"

- name: A new instance called "frida_by_state" must be running
  assert:
    that:
      - vagrant_state_invalid_frida_results is failed
      - vagrant_state_invalid_frida_results is not changed
      - vagrant_state_invalid_frida_results.msg == "State must be one of [running, poweroff, not_created] instead of 'lalala'"

# Equivalent of "vagrant up" command
- name: Fire up a vagrant instance
  jclaveau.vagrant.vagrant:
  args:
    state: running
    box_name: "{{box_name}}"
    # box_path: "{{box_path_virtualbox}}"
    vm_name: "frida_by_state"
    config_code: |
      config.vm.provider "virtualbox" do |vb|
      vb.memory = 256
      end
    log: true
  register: vagrant_state_running_frida_results

# - name: dbg vagrant_state_running_frida_results
#   ansible.builtin.debug:
#     msg: "{{ vagrant_state_running_frida_results }}"

- name: A new instance called "frida_by_state" must be running
  assert:
    that:
      - vagrant_state_running_frida_results is success
      - vagrant_state_running_frida_results is changed
      - vagrant_state_running_frida_results.instances | count == 1
      - vagrant_state_running_frida_results.instances[0].vagrant_name == "frida_by_state"
      - vagrant_state_running_frida_results.instances[0].status[0][0] == "frida_by_state"
      - vagrant_state_running_frida_results.instances[0].status[0][1] == "running"
      - vagrant_state_running_frida_results.instances[0].status[0][2] == "virtualbox"

# Equivalent of "vagrant halt" command
- name: Halt the vagrant instance
  jclaveau.vagrant.vagrant:
  args:
    state: poweroff
    vm_name: "frida_by_state"
    log: true
  register: vagrant_state_poweroff_frida_results

# - name: dbg vagrant_state_poweroff_frida_results
#   ansible.builtin.debug:
#     msg: "{{ vagrant_state_poweroff_frida_results }}"

- name: A new instance called "frida_by_state" must be poweroff
  assert:
    that:
      - vagrant_state_poweroff_frida_results is success
      - vagrant_state_poweroff_frida_results is changed
      - vagrant_state_poweroff_frida_results.status | count == 1
      - vagrant_state_poweroff_frida_results.status.frida_by_state[0][0][0] == "frida_by_state"
      - vagrant_state_poweroff_frida_results.status.frida_by_state[0][0][1] == "poweroff"
      - vagrant_state_poweroff_frida_results.status.frida_by_state[0][0][2] == "virtualbox"

# Equivalent of "vagrant destroy" command
- name: Destroys the vagrant instance
  jclaveau.vagrant.vagrant:
  args:
    state: not_created
    vm_name: "frida_by_state"
    log: true
  register: vagrant_state_not_created_frida_results

# - name: dbg vagrant_state_not_created_frida_results
#   ansible.builtin.debug:
#     msg: "{{ vagrant_state_not_created_frida_results }}"

- name: A new instance called "frida_by_state" must not be created
  assert:
    that:
      - vagrant_state_not_created_frida_results is success
      - vagrant_state_not_created_frida_results is changed
      - vagrant_state_not_created_frida_results.status | count == 1
      - vagrant_state_not_created_frida_results.status.frida_by_state[0][0][0] == "frida_by_state"
      - vagrant_state_not_created_frida_results.status.frida_by_state[0][0][1] == "not_created"
      - vagrant_state_not_created_frida_results.status.frida_by_state[0][0][2] == "virtualbox"

# Equivalent of "vagrant clear" command
- name: Remove frida from the Vagrantfile
  local_action:
    module: vagrant
    command: clear
    log: true
